AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates Pipeline and required resources for TaskCat CI. License: Apache 2.0 (Please do not remove)(qs-1ops82lkf)'
Parameters:
  GitHubUser:
    Description: Enter GitHub username of the repository owner
    Type: String
  GitHubRepoName:
    Description: Enter the repository name that should be monitored for changes
    Type: String
  SourceRepoBranch:
    Description: Enter the branch name to be monitored
    Type: String
  ReleaseBranch:
    Description: Enter the release branch name. On successfull build, above branch will be merged into this branch.
    Type: String
  GitHubOAuthToken:
    Description: Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens
    Type: String
    NoEcho: 'true'
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-taskcat-ci/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubUser
          - GitHubRepoName
          - SourceRepoBranch
          - ReleaseBranch
          - GitHubOAuthToken
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      GitHubUser:
        default: Repository owner
      GitHubRepoName:
        default: Repository name
      SourceRepoBranch:
        default: Source branch
      ReleaseBranch:
        default: Release branch
      GitHubOAuthToken:
        default: OAuth2 token
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Resources:
  CopyLambdasStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/copy-lambdas.template'
      Parameters:
        BucketName: !Ref 'ArtifactBucket'
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CopyLambdasStack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/ssm.template'
      Parameters:
        GithubToken: !Ref 'GitHubOAuthToken'
        LambdaZipsBucket: !GetAtt 'CopyLambdasStack.Outputs.LambdaZipsBucket'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
  GitMergeLambda:
    Type: AWS::Lambda::Function
    DependsOn:
      - GitMergeRole
      - CopyLambdasStack
      - SSMStack
    Properties:
      Code:
        S3Bucket: !GetAtt 'CopyLambdasStack.Outputs.LambdaZipsBucket'
        S3Key: !Sub '${QSS3KeyPrefix}functions/package/lambda.zip'
      Description: Merge github branches
      FunctionName: Git_Merge
      Handler: !Join
        - .
        - - git_merge
          - lambda_handler
      Role: !GetAtt 'GitMergeRole.Arn'
      Runtime: python3.6
      Timeout: '30'
  GitMergeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: GitMergeRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:logs:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - :log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineExecution
                  - codepipeline:GetPipelineState
                  - codepipeline:ListPipelines
                  - codepipeline:ListPipelineExecutions
                Resource:
                  - !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - codepipeline:GetJobDetails
                  - codepipeline:PutJobSuccessResult
                  - codepipeline:PutJobFailureResult
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:Describe*
                  - ssm:Get*
                  - ssm:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !GetAtt 'SSMStack.Outputs.KMSKeyArn'
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref 'ArtifactBucket'
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: Source
              Configuration:
                Owner: !Ref 'GitHubUser'
                Repo: !Ref 'GitHubRepoName'
                Branch: !Ref 'SourceRepoBranch'
                OAuthToken: !Ref 'GitHubOAuthToken'
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts: []
              Configuration:
                ProjectName: !Ref 'CodeBuild'
              RunOrder: 2
        - Name: Deploy
          Actions:
            - Name: Git-merge
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: '1'
                Provider: Lambda
              Configuration:
                FunctionName: !Ref 'GitMergeLambda'
                UserParameters: !Sub '{ "owner": "${GitHubUser}", "repo": "${GitHubRepoName}",
                  "baseBranch": "${ReleaseBranch}", "headBranch": "${SourceRepoBranch}"
                  }'
              RunOrder: 3
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: !Sub 'Submit build jobs for ${GitHubRepoName} as part of CI/CD pipeline'
      ServiceRole: !GetAtt 'CodeBuildServiceRole.Arn'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: PROJECTNAME
            Value: !Sub '${GitHubRepoName}'
          - Name: GITHUBUSER
            Value: !Sub '${GitHubUser}'
          - Name: GITHUBTOKEN
            Value: !Sub '${GitHubOAuthToken}'
          - Name: SOURCEBRANCH
            Value: !Sub '${SourceRepoBranch}'
          - Name: ARTIFACT_BUCKET
            Value: !Ref 'ArtifactBucket'
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - echo Entered the install phase...
                - apt-get update -y
                - sudo apt-get install zip gzip tar -y
                - pip3 install --upgrade pip
                - ln -s /usr/local/bin/pip /usr/bin/pip
            pre_build:
              commands:
                - echo Entered the pre_build phase...
                - echo Current directory is $CODEBUILD_SRC_DIR
                - ls -la
                - export dirname=${PWD##*/}
                - echo Directory name $dirname
                - cd ..
                - mv $dirname $PROJECTNAME
                - ls -la
                - cd $PROJECTNAME
                - git config --global url."https://github.com/".insteadOf "git@github.com:"
                - git init
                - git remote add origin https://$GITHUBTOKEN@github.com/$GITHUBUSER/$PROJECTNAME.git
                - git fetch
                - git checkout -ft origin/$SOURCEBRANCH
                - git submodule init
                - git submodule update --recursive
                - ls -lR
                - cd ..
                - echo Installing Taskcat using pip3...
                - pip install taskcat==0.7.19
                - echo Verifying Taskcat installation...
                - taskcat
                - echo Configuring aws cli...
                - aws configure set default.region us-west-2
            build:
              commands:
                - echo Entered the build phase...
                - taskcat -c $PROJECTNAME/ci/taskcat.yml
                - ls -1 taskcat_outputs
                - ls -1 taskcat_outputs | while read LOG; do cat taskcat_outputs/${LOG}; done
                - echo Zipping and uploading report to $ARTIFACT_BUCKET S3 bucket
                - zip -r taskcat_report.zip taskcat_outputs
                - aws s3 cp taskcat_report.zip s3://$ARTIFACT_BUCKET/taskcat_reports/$CODEBUILD_BUILD_ID.zip
                - |
                  if $(grep -Fq "CREATE_FAILED" taskcat_outputs/index.html)
                  then
                    echo Quickstart FAILED!
                    exit 1
                  else
                    echo Quickstart Passed!
                    exit 0
                  fi
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 30
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    DependsOn:
      - ArtifactBucket
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub '${GitHubRepoName}-CICD-CodePipelineService-${AWS::Region}'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}'
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}/*'
                Effect: Allow
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole
                Resource: '*'
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
                Effect: Allow
              - Action:
                  - lambda:GetPolicy
                  - lambda:ListEventSourceMappings
                  - lambda:ListFunctions
                  - lambda:InvokeFunction
                  - lambda:GetEventSourceMapping
                  - lambda:GetFunction
                  - lambda:ListAliases
                  - lambda:GetAlias
                  - lambda:ListTags
                  - lambda:ListVersionsByFunction
                  - lambda:GetAccountSettings
                  - lambda:GetFunctionConfiguration
                Resource: '*'
                Effect: Allow
Outputs:
  CodePipelineURL:
    Description: The URL of the created Pipeline
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${CodePipeline}'
  TaskCatReports:
    Description: Path to the TaskCat report. Each report is named as CODEBUILD_BUILD_ID.zip
    Value: !Sub 's3://${ArtifactBucket}/taskcat_reports/'
